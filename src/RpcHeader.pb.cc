// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RpcHeader.proto

#include "RpcHeader.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace MyRpc {

inline constexpr RpcHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : service_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        method_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        args_size_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RpcHeader::RpcHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RpcHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RpcHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RpcHeaderDefaultTypeInternal() {}
  union {
    RpcHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RpcHeaderDefaultTypeInternal _RpcHeader_default_instance_;
}  // namespace MyRpc
static ::_pb::Metadata file_level_metadata_RpcHeader_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_RpcHeader_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_RpcHeader_2eproto = nullptr;
const ::uint32_t TableStruct_RpcHeader_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MyRpc::RpcHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MyRpc::RpcHeader, _impl_.service_name_),
    PROTOBUF_FIELD_OFFSET(::MyRpc::RpcHeader, _impl_.method_name_),
    PROTOBUF_FIELD_OFFSET(::MyRpc::RpcHeader, _impl_.args_size_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::MyRpc::RpcHeader)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::MyRpc::_RpcHeader_default_instance_._instance,
};
const char descriptor_table_protodef_RpcHeader_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017RpcHeader.proto\022\005MyRpc\"I\n\tRpcHeader\022\024\n"
    "\014service_name\030\001 \001(\t\022\023\n\013method_name\030\002 \001(\t"
    "\022\021\n\targs_size\030\003 \001(\rb\006proto3"
};
static ::absl::once_flag descriptor_table_RpcHeader_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_RpcHeader_2eproto = {
    false,
    false,
    107,
    descriptor_table_protodef_RpcHeader_2eproto,
    "RpcHeader.proto",
    &descriptor_table_RpcHeader_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_RpcHeader_2eproto::offsets,
    file_level_metadata_RpcHeader_2eproto,
    file_level_enum_descriptors_RpcHeader_2eproto,
    file_level_service_descriptors_RpcHeader_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_RpcHeader_2eproto_getter() {
  return &descriptor_table_RpcHeader_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_RpcHeader_2eproto(&descriptor_table_RpcHeader_2eproto);
namespace MyRpc {
// ===================================================================

class RpcHeader::_Internal {
 public:
};

RpcHeader::RpcHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MyRpc.RpcHeader)
}
inline PROTOBUF_NDEBUG_INLINE RpcHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : service_name_(arena, from.service_name_),
        method_name_(arena, from.method_name_),
        _cached_size_{0} {}

RpcHeader::RpcHeader(
    ::google::protobuf::Arena* arena,
    const RpcHeader& from)
    : ::google::protobuf::Message(arena) {
  RpcHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.args_size_ = from._impl_.args_size_;

  // @@protoc_insertion_point(copy_constructor:MyRpc.RpcHeader)
}
inline PROTOBUF_NDEBUG_INLINE RpcHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : service_name_(arena),
        method_name_(arena),
        _cached_size_{0} {}

inline void RpcHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.args_size_ = {};
}
RpcHeader::~RpcHeader() {
  // @@protoc_insertion_point(destructor:MyRpc.RpcHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RpcHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.method_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RpcHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:MyRpc.RpcHeader)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.method_name_.ClearToEmpty();
  _impl_.args_size_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RpcHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 47, 2> RpcHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RpcHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string service_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RpcHeader, _impl_.service_name_)}},
    // string method_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RpcHeader, _impl_.method_name_)}},
    // uint32 args_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RpcHeader, _impl_.args_size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RpcHeader, _impl_.args_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string service_name = 1;
    {PROTOBUF_FIELD_OFFSET(RpcHeader, _impl_.service_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string method_name = 2;
    {PROTOBUF_FIELD_OFFSET(RpcHeader, _impl_.method_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 args_size = 3;
    {PROTOBUF_FIELD_OFFSET(RpcHeader, _impl_.args_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\17\14\13\0\0\0\0\0"
    "MyRpc.RpcHeader"
    "service_name"
    "method_name"
  }},
};

::uint8_t* RpcHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MyRpc.RpcHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    const std::string& _s = this->_internal_service_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MyRpc.RpcHeader.service_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string method_name = 2;
  if (!this->_internal_method_name().empty()) {
    const std::string& _s = this->_internal_method_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MyRpc.RpcHeader.method_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 args_size = 3;
  if (this->_internal_args_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_args_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MyRpc.RpcHeader)
  return target;
}

::size_t RpcHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MyRpc.RpcHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_service_name());
  }

  // string method_name = 2;
  if (!this->_internal_method_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_method_name());
  }

  // uint32 args_size = 3;
  if (this->_internal_args_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_args_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RpcHeader::_class_data_ = {
    RpcHeader::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RpcHeader::GetClassData() const {
  return &_class_data_;
}

void RpcHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RpcHeader*>(&to_msg);
  auto& from = static_cast<const RpcHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MyRpc.RpcHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_method_name().empty()) {
    _this->_internal_set_method_name(from._internal_method_name());
  }
  if (from._internal_args_size() != 0) {
    _this->_internal_set_args_size(from._internal_args_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RpcHeader::CopyFrom(const RpcHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MyRpc.RpcHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RpcHeader::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RpcHeader::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RpcHeader::InternalSwap(RpcHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_name_, &other->_impl_.service_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.method_name_, &other->_impl_.method_name_, arena);
        swap(_impl_.args_size_, other->_impl_.args_size_);
}

::google::protobuf::Metadata RpcHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_RpcHeader_2eproto_getter, &descriptor_table_RpcHeader_2eproto_once,
      file_level_metadata_RpcHeader_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace MyRpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
